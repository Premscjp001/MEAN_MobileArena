{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/forms/forms.component.html","webpack:///./src/app/forms/forms.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/models/postPhone.model.ts","webpack:///./src/app/phones/phone.component.html","webpack:///./src/app/phones/phone.component.ts","webpack:///./src/app/phones/phoneDetail.component.html","webpack:///./src/app/phones/phoneDetail.component.ts","webpack:///./src/app/phones/phoneFilter.pipe.ts","webpack:///./src/app/services/phoneService.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" style=\\\"background: #e7e7e7f8;\\\">\\n    <nav class=\\\"navbar navbar-expand-sm navbar-inverse bg-dark\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/phone']\\\">Phones</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/form']\\\">Add Phone</a>\\n          </li>\\n        </ul>\\n    </nav>\\n        <div>\\n          <router-outlet></router-outlet>\\n        </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mean';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { PhoneComponent } from './phones/phone.component';\nimport { PhoneService } from './services/phoneService.service';\nimport { PhoneDetailComponent } from './phones/phoneDetail.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsComponent } from './forms/forms.component';\nimport { FilterPipe } from './phones/phoneFilter.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PhoneComponent,\n    PhoneDetailComponent,\n    HomeComponent,\n    FormsComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot([\n      {path: 'phone', component: PhoneComponent},\n      {path: 'phone/:id', component: PhoneDetailComponent},\n      {path: 'form', component: FormsComponent},\n      {path: 'home', component: HomeComponent},\n      {path: '', redirectTo: 'home', pathMatch: 'full'}\n  ]),\n  ],\n  providers: [PhoneService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <form #form=\\\"ngForm\\\" novalidate (submit)=\\\"submitForm(form)\\\">\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"name.invalid && name.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Phone Name</label>\\r\\n                <input type=\\\"text\\\" \\r\\n                      name=\\\"name\\\" \\r\\n                      placeholder=\\\"enter phone name ( required )\\\"\\r\\n                      id=\\\"name\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [ngModel]=\\\"model.name\\\"\\r\\n                      (ngModelChange)=\\\"firstToUpper($event)\\\"\\r\\n                      #name=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.invalid && name.dirty\\\">\\r\\n                        Please enter Name\\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"release_date.invalid && release_date.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Release Date</label>\\r\\n                <input type=\\\"date\\\" \\r\\n                      name=\\\"release_date\\\" \\r\\n                      placeholder=\\\"Date of Release\\\"\\r\\n                      id=\\\"release_date\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [ngModel]=\\\"model.release_date\\\"\\r\\n                      #release_date=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"release_date.invalid && release_date.dirty\\\">\\r\\n                        Please enter Release date\\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"ram.invalid && ram.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Ram </label>\\r\\n                <input type=\\\"text\\\" \\r\\n                      name=\\\"ram\\\" \\r\\n                      placeholder=\\\"Ram in gb\\\"\\r\\n                      id=\\\"ram\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"model.ram\\\"\\r\\n                      (blur)=\\\"ramWithGB($event)\\\"\\r\\n                      #ram=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ram.invalid && ram.dirty\\\">\\r\\n                        Please enter ram\\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"battery.invalid && battery.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Battery</label>\\r\\n                <input type=\\\"text\\\" \\r\\n                      name=\\\"battery\\\" \\r\\n                      placeholder=\\\"battery in mAh\\\"\\r\\n                      id=\\\"battery\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"model.battery\\\"\\r\\n                      (blur)=\\\"batteryWithmah($event)\\\"\\r\\n                      #battery=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"battery.invalid && battery.dirty\\\">\\r\\n                        Please enter battery \\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"screen_size.invalid && screen_size.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Screen Size</label>\\r\\n                <input type=\\\"text\\\" \\r\\n                      name=\\\"screen_size\\\" \\r\\n                      placeholder=\\\"Screen Size\\\"\\r\\n                      id=\\\"screen_size\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [ngModel]=\\\"model.screen_size\\\"\\r\\n                      #screen_size=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"screen_size.invalid && screen_size.dirty\\\">\\r\\n                        Please enter screen size \\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"description.invalid && description.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Description</label>\\r\\n                <input type=\\\"text\\\" \\r\\n                      name=\\\"description\\\" \\r\\n                      placeholder=\\\"Phone Description\\\"\\r\\n                      id=\\\"description\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [ngModel]=\\\"model.description\\\"\\r\\n                      #description=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"description.invalid && description.dirty\\\">\\r\\n                        Please enter description \\r\\n                      </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [class.has-error]=\\\"cover.invalid && cover.dirty\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Image Url</label>\\r\\n                <input type=\\\"url\\\" \\r\\n                      name=\\\"cover\\\" \\r\\n                      placeholder=\\\"Image url\\\"\\r\\n                      id=\\\"cover\\\"\\r\\n                      required\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [ngModel]=\\\"model.cover\\\"\\r\\n                      #cover=\\\"ngModel\\\">\\r\\n                      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"cover.invalid && cover.dirty\\\">\\r\\n                        Please enter cover \\r\\n                      </div>\\r\\n            </div>\\r\\n          \\r\\n          <button class=\\\"btn btn-success\\\" \\r\\n                  type=\\\"submit\\\" \\r\\n                  [disabled]=\\\"!form.valid\\\">Submit</button>\\r\\n         </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PostPhone} from '../models/postPhone.model';\r\nimport { PhoneService } from '../services/phoneService.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html'\r\n})\r\n\r\nexport class FormsComponent {\r\n\r\n  model = new PostPhone('', '', '', '',  '', '', '');\r\n  hasCodeLangError: Boolean = false;\r\n  disbableSubmit: Boolean = false;\r\n\r\n  constructor( private phoneService: PhoneService,\r\n                private _route: Router) { }\r\n\r\n  firstToUpper(value: string): void  {\r\n    if (value.length > 0) {\r\n      this.model.battery = '';\r\n      this.model.name = value.charAt(0).toUpperCase() + value.slice(1);\r\n    } else {\r\n      this.model.name = value;\r\n    }\r\n  }\r\n\r\n  ramWithGB(event): void  {\r\n    const ram_value = this.model.ram;\r\n    if (ram_value.length > 0) {\r\n      this.model.ram = ' ';\r\n      this.model.ram = ram_value.trim() + 'GB';\r\n    } else {\r\n      this.model.ram = ram_value;\r\n    }\r\n  }\r\n\r\n  batteryWithmah(event): void  {\r\n    const battery_value = this.model.battery;\r\n    if (battery_value.length > 0) {\r\n      this.model.battery = '';\r\n      this.model.battery = battery_value.trim() + 'mAH';\r\n    } else {\r\n      this.model.battery = battery_value;\r\n    }\r\n  }\r\n\r\n  submitForm(form: NgForm): void {\r\n    // console.log(form.value);\r\n    this.phoneService.postEmployee(form.value)\r\n        .subscribe(data => console.log('success', data));\r\n\r\n    this._route.navigate(['/phone']);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1>Mobile Phone Wiki</h1>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <img src=\\\"../../assets/home.jpg\\\" class=\\\"img-thumbnail\\\"/>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html'\r\n})\r\n\r\nexport class HomeComponent {\r\n\r\n}\r\n","export class PostPhone {\r\n    constructor(\r\n        public name: string,\r\n        public release_date: string,\r\n        public ram: string,\r\n        public battery: string,\r\n        public screen_size: string,\r\n        public description: string,\r\n        public cover: string\r\n    ) {}\r\n}\r\n","module.exports = \"<input class=\\\"form-control mr-sm-2 col-md-4\\\" type=\\\"text\\\" placeholder=\\\"Search your phone\\\"\\r\\n    [(ngModel)]=\\\"serachPhone\\\">\\r\\n<h4><i> Number of Phone Found : {{ (phones | filterProduct:serachPhone)?.length}} </i></h4>\\r\\n<div class=\\\"row\\\">\\r\\n    \\r\\n    <div class=\\\"card \\\" style=\\\"width:250px;margin-left:10%;margin-top:4%; padding:4%;\\\" *ngFor=\\\"let phone of phones | filterProduct:serachPhone \\\">\\r\\n            <img class=\\\"card-img-top img-fluid\\\" [src]=\\\"phone.cover\\\"\\r\\n                onError=\\\"this.src='../assets/default.png';\\\" alt=\\\"Card image\\\"\\r\\n                style=\\\"width:180px;height:180px\\\">\\r\\n            <div class=\\\"card-body text-center\\\">\\r\\n                <h4 class=\\\"card-title\\\" style=\\\"color:#0b3080\\\">{{phone.name}}</h4>\\r\\n                <p class=\\\"card-text\\\">{{phone.ram}} RAM</p>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/phone',phone.name]\\\">\\r\\n                    Show Detail\\r\\n                </button>\\r\\n                <!--button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#'+phone.id\\\">\\r\\n                    Open modal\\r\\n                  </button-->\\r\\n                \\r\\n                  <!-- The Modal -->\\r\\n                  <div class=\\\"modal fade\\\" id={{phone.id}}>\\r\\n                    <div class=\\\"modal-dialog\\\">\\r\\n                      <div class=\\\"modal-content\\\">\\r\\n                      \\r\\n                        <!-- Modal Header -->\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n                          <h4 class=\\\"modal-title\\\">{{phone.name}}</h4>\\r\\n                          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n                        </div>\\r\\n                        \\r\\n                        <!-- Modal body -->\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                            <p>{{phone.ram}} RAM</p>\\r\\n                            <p>{{phone.release_date}}</p>\\r\\n                            <p>{{phone.battery}}</p>\\r\\n                            <p>{{phone.screen_size}}</p>\\r\\n                            <p>{{phone.description}}</p>\\r\\n                        </div>\\r\\n                        \\r\\n                        <!-- Modal footer -->\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                        </div>\\r\\n                        \\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n               \\r\\n               \\r\\n            </div>\\r\\n        </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PhoneService } from '../services/phoneService.service';\r\nimport { IPhone } from '../models/phoneData.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-phone',\r\n    templateUrl: './phone.component.html'\r\n})\r\n\r\nexport class PhoneComponent implements OnInit {\r\n    title: String = '*****Product List';\r\n    showTable: Boolean = true;\r\n    showImage: Boolean = false;\r\n    serachPhone: string;\r\n    imageWidth: Number = 50;\r\n    phones: IPhone[];\r\n\r\n    constructor(private _phoneSerivce: PhoneService) {}\r\n\r\n    ngOnInit(): void {\r\n        this._phoneSerivce.getPhones()\r\n            .subscribe((data) => this.phones = data);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"media border p-3\\\">\\r\\n    <img [src]=\\\"phonedetail.cover\\\" \\r\\n    onError=\\\"this.src='../assets/default.png';\\\" class=\\\"mr-3 mt-3\\\"\\r\\n         style=\\\"width:400px;height:400px\\\">\\r\\n    <div class=\\\"media-body\\\">\\r\\n      <h1>{{phonedetail.name}}</h1>\\r\\n      <h2><i>{{phonedetail.release_date}}</i></h2>\\r\\n      <p>{{phonedetail.ram}} RAM</p>    \\r\\n      <p>{{phonedetail.battery}}</p> \\r\\n      <p>{{phonedetail.screen_size}}inch</p>\\r\\n      <p>{{phonedetail.description}}</p> \\r\\n    </div>\\r\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"onBack()\\\"><<Back</button>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { PhoneService } from '../services/phoneService.service';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { IPhone } from '../models/phoneData.model';\r\n\r\n@Component({\r\n    templateUrl: './phoneDetail.component.html'\r\n})\r\n\r\nexport class PhoneDetailComponent implements OnInit {\r\n    id: String;\r\n    phonedetail: IPhone[];\r\n\r\n    constructor(private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private  _phoneSerivce: PhoneService) {}\r\n\r\n\r\n    ngOnInit(): void {\r\n            this.id = this._route.snapshot.params['id'];\r\n\r\n            this._phoneSerivce.getPhonesDetails(this.id)\r\n                .subscribe((data) => this.phonedetail = data[0]);\r\n    }\r\n\r\n    onBack(): void {\r\n        this._router.navigate(['/phone']);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IPhone } from '../models/phoneData.model';\n\n@Pipe ({\n    name: 'filterProduct'\n})\n\nexport class FilterPipe implements PipeTransform {\n    transform(value: IPhone[], filterBy: string): IPhone[] {\n        filterBy = filterBy ? filterBy.toLowerCase() : null ;\n        return filterBy ? value.filter((product: IPhone) =>\n            product.name.toLowerCase().indexOf(filterBy) !== -1) : value;\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PostPhone} from '../models/postPhone.model';\r\nimport { IPhone } from '../models/phoneData.model';\r\n\r\n\r\n@Injectable()\r\n\r\n// For RxJS >6.0.0\r\nexport class PhoneService {\r\n\r\n    constructor(private _http: HttpClient,\r\n                private __http: Http) {\r\n                }\r\n\r\n    private extractData(res: Response) {\r\n        return res.json();\r\n    }\r\n\r\n    getPhones(): Observable<IPhone[]> {\r\n        return this._http.get<IPhone[]>('/api/getProducts');\r\n    }\r\n\r\n    getPhonesDetails(id): Observable<any[]> {\r\n        return this._http.get<any[]>('/api/getProducts?name=' + id);\r\n\r\n    }\r\n\r\n\r\n    postEmployee(phoneData: PostPhone): Observable<any> {\r\n        const body = JSON.stringify(phoneData);\r\n        const headers = new Headers({'Content-Type': 'application/json'});\r\n        const options = new RequestOptions({headers: headers});\r\n        return this.__http.post('/api/addProduct', body, options);\r\n\r\n    }\r\n\r\n    private handleError(error: Response) {\r\n        return Observable.throw(error.statusText || 'Server error');\r\n      }\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}